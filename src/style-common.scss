@import '~@angular/material/theming';
@mixin style-common($theme) {
  $primary:    map-get($theme, primary);
  $accent:     map-get($theme, accent);
  $warn:       map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  li::before {  //bullet colour
    color: mat-color($primary);
  }

  a {
    text-decoration: none;
  }
  p {
    text-align: justify;
  }

  ul {
    list-style: none   //remove existing bullets
  }
  ul li::before {
    content: "â€¢";
    font-weight: bold;
    display: inline-block;
    width: 1em;
    margin-left: -1em;
  }
  li > ul > li::before {
    content: "-";
  }

  span.avoid-wrap {
    display: inline-block;
  }

  @media screen {

    //change text selection colour
    ::-moz-selection { //for Firefox
      background: mat-color($primary);
    }
    ::selection { //for other browsers
      background: mat-color($primary);
    }

    li, p {
      line-height: 1.5;
      color:mat-color($foreground, secondary-text);
    }
    h1 {
      margin-top:50px;
    }
    li > ul { //give 2nd level bullets margin similar to 1st level bullets
      margin-top:12px;
      margin-bottom:12px;
    }

    a {
      color: mat-color($primary);
      &:visited {
        color: mix(mat-color($primary), mat-color($foreground, text), 70%);
      }
      &:hover {
        text-decoration: underline;
      }
    }
  }

  @media screen and (max-width: 599px) {
    h1,h2,h3 {
      text-align: center;
    }
  }

  @media print{

    img {
      page-break-inside: avoid;
    }

    a {
      color: mat-color($primary);
    }

  }
}

@page {
  margin: 2cm;
}

html {
  scroll-behavior: smooth;
}
body { 
  font-family: Roboto, Arial, sans-serif;
  margin: 0;
  overflow-x: hidden;
}

//short-term fix for a strange issue in Firefox (observed in 63.0.3) where setting the
//scroll-behaviour of the html element broke the sticky positioning of the nav-bar
@-moz-document url-prefix() {
  body{
    scroll-behavior: smooth;
  }
  html{
    scroll-behavior: unset;
  }
}

//short-term fix to disable trasition effects while the theme is changing
//better solution would be to exclusively use angular transitions,
//which bind transitions to states
.no-transition * {
  -webkit-transition: none !important;
  -moz-transition:    none !important;
  -o-transition:      none !important;
  transition:         none !important;
}